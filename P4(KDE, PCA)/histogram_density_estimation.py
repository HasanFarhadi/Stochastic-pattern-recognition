# -*- coding: utf-8 -*-
"""histogram density estimation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xu6RzfM6cW7GPJB1E85OZJJ9DYyR5yPH
"""

import numpy as np
import pandas as pd
import math
import matplotlib.pyplot as plt
from scipy.stats import multivariate_normal

#generating initial data
mu1 = [2, 5]

cov1 = [[2, 0], [0, 2]]

mu2 = [8, 1]

cov2 = [[3, 1], [1, 3]]

mu3 = [5, 3]

cov3 = [[2, 1], [1, 2]]

dataset1 = np.random.multivariate_normal(mu1, cov1, 500)
dataset2 = np.random.multivariate_normal(mu2, cov2, 500)
dataset3 = np.random.multivariate_normal(mu3, cov3, 500)

dataset = np.append(dataset1, dataset2, axis = 0)
dataset = np.append(dataset, dataset3, axis = 0)

plt.scatter(dataset[:, 0], dataset[:, 1], s = 2, c = 'black')
plt.show()
plt.hist2d(dataset[:, 0], dataset[:, 1], bins = 20);
plt.show()

def Plot_Histogram(dataset, h):
    #definign edges
    xmin = dataset[:, 0].min()
    xmax = dataset[:, 0].max()
    ymin = dataset[:, 1].min()
    ymax = dataset[:, 1].max()

    xedges = np.arange(xmin, xmax, h)
    yedges = np.arange(ymin, ymax, h)

    bin_value, xedges, yedges =  np.histogram2d(dataset[:, 0], dataset[:, 1], bins = [xedges, yedges])

    #Plotting the histogram
    xx, yy = np.meshgrid(xedges[:-1], yedges[:-1], indexing = 'ij')

    xx = xx.flatten()
    yy = yy.flatten()

    fig = plt.figure(figsize=(12, 9), dpi = 90)
    ax = fig.add_subplot(111, projection='3d')
    width = np.ones(1)
    depth = np.ones(1)
    pdf = bin_value.flatten()
    bottom = np.zeros_like(pdf)

    n = len(dataset)
    pdf = pdf/(n * h * h)

    ax.bar3d(xx, yy, bottom, width, depth, pdf, shade=True)

Plot_Histogram(dataset, 0.6)

Plot_Histogram(dataset, 0.3)

Plot_Histogram(dataset, 0.09)